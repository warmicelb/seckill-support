<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.demo.support.mapper.ActivityMapper" >
  <resultMap id="BaseResultMap" type="com.demo.support.dao.ActivityInfo" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="activity_name" property="activityName" jdbcType="VARCHAR" />
    <result column="product_id" property="productId" jdbcType="VARCHAR" />
    <result column="activity_start" property="activityStart" jdbcType="DATE" />
    <result column="activity_end" property="activityEnd" jdbcType="DATE" />
    <result column="limit_num" property="limitNum" jdbcType="INTEGER" />
    <result column="stock_num" property="stockNum" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="activity_picture_url" property="activityPictureUrl" jdbcType="VARCHAR" />
    <result column="activity_price" property="activityPrice" jdbcType="DECIMAL" />

  </resultMap>

  <sql id="Base_Column_List" >
    id, activity_name,product_id,activity_start,activity_end,limit_num,stock_num,status,activity_picture_url,activity_price
  </sql>

  <insert id="insert" parameterType="com.demo.support.dao.ActivityInfo" useGeneratedKeys="true" keyProperty="id">
    insert into seckill_activity(
    activity_name,product_id,activity_start,activity_end,limit_num,stock_num,status,activity_picture_url,activity_price)
    values (#{activityName},#{productId},#{activityStart},#{activityEnd},
    #{limitNum},#{stockNum},#{status},#{activityPictureUrl},#{activityPrice})
  </insert>

  <select id="selectById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select
    <include refid="Base_Column_List" />
    from seckill_activity
    where id = #{id}
  </select>

  <select id="selectByProductId" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    <include refid="Base_Column_List" />
    from seckill_activity
    where product_id = #{productId}
    and status = 1
    order by id desc
    limit 1
  </select>

  <select id="selectByCondition" resultMap="BaseResultMap" >
    select
    <include refid="Base_Column_List" />
    from seckill_activity
    where product_id = #{productId}
    <if test="status != null">
      and status = #{status}
    </if>
    order by id desc
    limit 1
  </select>

  <update id="updateStatus">
    update seckill_activity
    set status = #{status}
    where id = #{id}
  </update>

  <update id="updateStockNum">
    update seckill_activity
    set stock_num = stock_num - #{buyNum}
    where id = #{id}
  </update>

</mapper>
